local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")

local teleportEnabled = false
local teleportSphere = nil

local function getHandleInHand()
    local tool = character:FindFirstChildOfClass("Tool")
    if tool then
        return tool:FindFirstChild("Handle")
    end
    return nil
end

local function createSphere()
    if teleportSphere then return end

    teleportSphere = Instance.new("Part")
    teleportSphere.Name = "TeleportSphere"
    teleportSphere.Shape = Enum.PartType.Ball
    teleportSphere.Size = Vector3.new(20, 20, 20)
    teleportSphere.Position = rootPart.Position
    teleportSphere.Anchored = false
    teleportSphere.CanCollide = false
    teleportSphere.Massless = false
    teleportSphere.Transparency = 0.5
    teleportSphere.Color = Color3.fromRGB(128, 0, 255)
    teleportSphere.Material = Enum.Material.ForceField
    teleportSphere.Parent = workspace

    local sphereMesh = Instance.new("SpecialMesh")
    sphereMesh.MeshType = Enum.MeshType.Sphere
    sphereMesh.Scale = Vector3.new(1, 1, 1)
    sphereMesh.Parent = teleportSphere
end

local function destroySphere()
    if teleportSphere then
        teleportSphere:Destroy()
        teleportSphere = nil
    end
end

player:GetMouse().KeyDown:Connect(function(key)
    if key:lower() == "r" then
        teleportEnabled = not teleportEnabled
        if teleportEnabled then
            createSphere()
            teleportSphere.Transparency = 0.5
        else
            destroySphere()
        end
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if teleportSphere then
        teleportSphere.CFrame = rootPart.CFrame
    end
end)

spawn(function()
    while true do
        if teleportEnabled then
            local handle = getHandleInHand()
            if not handle then
                wait(0.1)
                continue
            end

            for _, otherPlayer in pairs(game.Players:GetPlayers()) do
                if otherPlayer == player then continue end

                local otherChar = otherPlayer.Character
                if not otherChar then continue end

                local otherHRP = otherChar:FindFirstChild("HumanoidRootPart")
                if not otherHRP then continue end

                local distance = (teleportSphere.Position - otherHRP.Position).Magnitude
                local radius = teleportSphere.Size.X / 2

                if distance <= radius then
                    otherHRP.CFrame = handle.CFrame * CFrame.new(0, 0, 0)
                    otherHRP.Massless = true
                    otherHRP.CanCollide = false
                else
                    otherHRP.Massless = false
                    otherHRP.CanCollide = true
                end
            end
        end

        wait(0.1)
    end
end)

character:WaitForChild("Humanoid").Died:Connect(function()
    teleportEnabled = false
    destroySphere()
end)

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    rootPart = character:WaitForChild("HumanoidRootPart")

    if not teleportSphere and teleportEnabled then
        createSphere()
    end
end)
